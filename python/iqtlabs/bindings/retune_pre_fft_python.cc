/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(retune_pre_fft.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(8b85264423963500dfd62650d0c0055a)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/iqtlabs/retune_pre_fft.h>
// pydoc.h is automatically generated in the build directory
#include <retune_pre_fft_pydoc.h>

void bind_retune_pre_fft(py::module& m)
{

    using retune_pre_fft = ::gr::iqtlabs::retune_pre_fft;


    py::class_<retune_pre_fft, gr::sync_decimator, std::shared_ptr<retune_pre_fft>>(
        m, "retune_pre_fft", D(retune_pre_fft))

        .def(py::init(&retune_pre_fft::make),
             py::arg("nfft"),
             py::arg("fft_batch_size"),
             py::arg("tag"),
             py::arg("freq_start"),
             py::arg("freq_end"),
             py::arg("tune_step_hz"),
             py::arg("tune_step_fft"),
             py::arg("skip_tune_step_fft"),
             py::arg("tuning_ranges"),
             py::arg("tag_now"),
             D(retune_pre_fft, make))


        ;
}
