---
id: iqtlabs_tuneable_test_source
label: tuneable_test_source
category: '[iqtlabs]'
flags: [python, cpp]
documentation: |-
  This block simulates a tuneable radio source, that emits samples
  that are constant based on requested frequency, and tagged with
  that frequency (generally, for testing blocks that require interactively
  retuning a source).

  inputs:
    cmd: accepts PMT tuning commands (same format as Soapy sources, "rx_freq").
  output:
    complex samples proportional to frequency.

  parameters:
    freq: initial frequency.
    freq_divisor: value to divide requested frequency by, to produce samples.

templates:
  imports: from gnuradio import iqtlabs
  make: >
    iqtlabs.tuneable_test_source(
    ${freq}, ${freq_divisor})

cpp_templates:
  includes: ['#include <gnuradio/iqtlabs/tuneable_test_source.h>']
  declarations: 'iqtlabs::tuneable_test_source::sptr ${id};'
  make: >
    this->${id} = iqtlabs::tuneable_test_source::make(
    ${freq}, ${freq_divisor});
  link: ['libgnuradio-iqtlabs.so']

parameters:
  - id: freq
    label: freq_divisor
    dtype: float
    default: 1e9
  - id: freq_divisor
    label: freq_divisor
    dtype: float
    default: 1e9

inputs:
  - label: cmd
    domain: message
    optional: true

outputs:
  - label: samples
    dtype: complex

file_format: 1
