---
id: iqtlabs_image_inference
label: image_inference
category: '[iqtlabs]'
flags: [python, cpp]

templates:
  imports: from gnuradio import iqtlabs
  make: >
    iqtlabs.image_inference(${tag}, ${vlen}, ${x}, ${y}, ${image_dir},
    ${convert_alpha}, ${norm_alpha}, ${norm_beta}, ${norm_type}, ${colormap},
    ${interpolation})

cpp_templates:
  includes: ['#include <gnuradio/iqtlabs/image_inference.h>']
  declarations: 'gr::iqtlabs::image_inference::sptr ${id};'
  make: >
    this->${id} = gr::iqtlabs::image_inference::make(${tag}, ${vlen},
    ${x}, ${y}, ${image_dir}, ${convert_alpha}, ${norm_alpha}, ${norm_beta},
    ${norm_type}, ${colormap}, ${interpolation});
  link: ['libgnuradio-iqtlabs.so']


parameters:
  - id: tag
    dtype: string
    default: 'rx_freq'
  - id: vlen
    dtype: int
  - id: x
    dtype: int
  - id: y
    dtype: int
  - id: image_dir
    dtype: str
  - id: convert_alpha
    dtype: float
    default: 255
  - id: norm_alpha
    dtype: float
    default: 0
  - id: norm_beta
    dtype: float
    default: 1
  - id: norm_type
    dtype: int
    default: 32  # cv::NORM_MINMAX
  - id: colormap
    dtype: int
    default: 20  # cv::TURBO
  - id: interpolation
    dtype: int
    default: 2  # cv::INTER_CUBIC
  - id: flip
    dtype: int
    default: 99  # cv::flip(), or 99 for no flip
  - id: min_peak_points
    dtype: float

asserts:
  - ${ tag != "" }
  - ${ vlen > 0 }

inputs:
  - label: input
    domain: stream
    dtype: float
    vlen: ${ vlen }

outputs:
  - label: input
    domain: stream
    dtype: byte
    vlen: ${ x * y }

file_format: 1
